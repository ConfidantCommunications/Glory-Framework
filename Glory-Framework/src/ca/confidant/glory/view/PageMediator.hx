package ca.confidant.glory.view;	import org.puremvc.haxe.patterns.mediator.Mediator;	import flash.display.Sprite;	import org.puremvc.haxe.interfaces.INotification;	import ca.confidant.glory.ApplicationFacade;	import ca.confidant.glory.view.components.PageComponent;	//import ca.confidant.glory.model.LoaderProxy;/** * @author Allan Dowdeswell * The PageMediator responds to commands which affect the page as a whole, such as transitions. * */	class PageMediator extends Mediator {		public static inline var TRANSITION_IN:String="in";		public static inline var TRANSITION_OUT:String="out";		public function new ( id:String,viewComponent:PageComponent ) {			super( id, viewComponent );			//idCode stored as mediatorName					}		override public function listNotificationInterests():Array<String>{			 return [					ApplicationFacade.DO_TRANSITION                   ];		}		override public function handleNotification( note:INotification ):Void{			switch ( note.getName() ) {            	case ApplicationFacade.DO_TRANSITION:					var go:Map<String,String>=note.getBody();					if((go.get("id")==mediatorName)&&(go.get("transitionType")==TRANSITION_IN)){						page().transitionIn();					} else if ((go.get("id")==mediatorName)&&(go.get("transitionType")==TRANSITION_OUT)){						page().transitionOut();					}             }		}		private function page():PageComponent {			return viewComponent;		}	}