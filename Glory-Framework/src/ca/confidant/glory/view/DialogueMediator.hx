package ca.confidant.glory.view;	//import flash.events.Event;	import JQuery;	//import js.Dom;	import org.puremvc.haxe.patterns.mediator.Mediator;	//import WidgetFramework;	import org.puremvc.haxe.interfaces.INotification;	import ca.confidant.glory.ApplicationFacade;	//import ca.confidant.glory.model.LoaderProxy;	class DialogueMediator extends Mediator {		//private var loaderProxy:LoaderProxy;		//private var theVideo:Dynamic;		private var type:String;		private var d:Dynamic;		public function new ( viewComponent:Hash<Dynamic>, type:String) {			super( viewComponent.get("idCode"), viewComponent );			//idCode stored as mediatorName			this.type=type;						//viewcomponent is a hash containing the original information			d = new JQuery("#"+mediatorName);			addListeners();		}						private function addListeners():Void{			d.bind( 'wantFade', function(event, theTarget){				new JQuery(theTarget).fadeOut("slow");						} );			d.click(callback(onClick));					}		private function onClick(e,j):Void{			var s:String="#"+mediatorName;			d.trigger('wantFade', [s]);			sendNotification(ApplicationFacade.PLAY_ALL_VIDEOS);		}		override public function listNotificationInterests():Array<String> {			return [ ];					}				override public function handleNotification( note:INotification ):Void {			switch ( note.getName() ) {			}		}		//loadWidgets();		private function init(xmlPath:String):Void {					}		private function dialogue():Dynamic {			//var d = new JQuery("#"+mediatorName);						return d;		}	}