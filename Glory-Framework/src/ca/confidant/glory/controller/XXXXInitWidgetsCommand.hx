package ca.confidant.glory.controller;    //import org.puremvc.as3.interfaces.ICommand;    import org.puremvc.haxe.interfaces.INotification;    import org.puremvc.haxe.patterns.command.SimpleCommand;    //import ca.confidant.glory.view.WidgetMediator;	import ca.confidant.glory.ApplicationFacade;    //import ca.confidant.glory.view.DocumentMediator;    //import ca.confidant.glory.view.DialogueMediator;//	import ca.confidant.glory.view.ApplicationMediator;//	import ca.confidant.glory.view.PeopleCarouselMediator;//	import ca.confidant.glory.view.ExternalInterfaceMediator;//	import ca.confidant.glory.view.components.PeopleCarouselComponent;	import ca.confidant.glory.model.WidgetsConfigProxy;	//import ca.confidant.glory.*;	//import WidgetFramework;	//import tv.stinkdigital.puremvcbase.model.BulkLoaderProxy;    class InitWidgetsCommand extends SimpleCommand    {        override public function execute( note:INotification ) : Void        {        		//var dm:DocumentMediator=cast(facade.retrieveMediator(DocumentMediator.NAME), DocumentMediator);        		//trace("videoType-->"+dm.getVideoType());			var widgetsConfigProxy:WidgetsConfigProxy = cast(facade.retrieveProxy(WidgetsConfigProxy.NAME), WidgetsConfigProxy);			var layout:String=widgetsConfigProxy.getChosenLayout();			//dm.addClass("#theContent",layout);			//dm.removeClass("#theContent","loading");			//var theHTML:String='<div class="'+layout+'">';			//var theHTML:String='';			//chosen widgets go here, to make mediators			var chosenWidgets:Array<Dynamic>=widgetsConfigProxy.getChosenWidgets();			for(thisWidget in chosenWidgets){				//idCode=thisWidget.get("group")+"_"+i;				theHTML+=widgetsConfigProxy.getWidgetHTML(thisWidget,dm.getVideoType());			}			/*if(dm.hasClass("body","apple")){				//the load script has determined an apple mobile device				theHTML+='<div id="activateDialog"><p>Tap to activate</p></div>';			}*/			//theHTML+="</div>";			var p:Hash<String>=new Hash();			p.set("id","theContent");			p.set("content",theHTML);			sendNotification(ApplicationFacade.SET_CONTENT, p);			//now that these exist in document, make a WidgetMediator for them:			/*for(thisWidget in chosenWidgets){				var wm:WidgetMediator = new WidgetMediator(thisWidget,thisWidget.get("type"),(dm.getVideoType()!="image"));				facade.registerMediator(wm);			}*/			//now call the page-embedded code that makes the sprite animations:			/*if (dm.getVideoType()=="canvas"){				//trace("canvas");				untyped __js__('initSprites()');			}*/        }    }